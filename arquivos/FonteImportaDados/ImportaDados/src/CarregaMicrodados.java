

import importa.dao.ConexaoPostgres;
import importa.model.MicrodadosLP;
import importa.model.MicrodadosMT;
import importa.model.Usuario;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Iterator;
import java.util.logging.Level;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.xmlbeans.impl.store.Path;

import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author renato
 */
public class CarregaMicrodados extends javax.swing.JFrame {

    Usuario user;
    /**
     * Creates new form CarregaArquivo
     */
    public CarregaMicrodados(Usuario user) {
        initComponents();
        this.user=user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();       
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Passo a Passo"));
        jPanel2.setName("Passo a Passo"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(10);
        jTextArea1.setText("ANTES DE IMPORTAR:\n1-Edite a planilha retirando o cabeçalho;\n2-Salve o arquivo no formato CSV;\n3-Campos de texto não devem ter aspas(\",') como demarcador;\n\n PARA IMPORTAR:\n1-Clique no botâo Importar Planilha;\n2-Na tela que abriu, navegue nas pastas até o local onde está o arquivo,\nCSV, desejado;\n3-Selecione o arquivo e aguarde o processamento;");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("O que será executado:"));
        jPanel3.setName("Passo a Passo"); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("1-Checagem de dados já existentes;\n2-Validação da Estrutura do Arquivos e da tabela de dados destino;\n3-Inserção ou atualização dos dados;\n4-Registro totalizados de dados importados;\n4.1-Registro de Erros de importação, caso haja algum;\n\nObs:Os relatórios de exito/problemas da importação serão exíbidos na plataforma:\neducarpravaler.org");
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Importar Microdados (CSV)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Processamento de Importação de Microdados");

        jLabel6.setText("conexão");

        jLabel5.setText("Versão 5.0.1 2020");

        /*jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2018", "2019", "2020" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });*/

        jLabel2.setText("Ano da Avaliação:");

        jLabel3.setText("Disciplina:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Língua Portuguesa", "Matemática" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                /*.addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)*/
                                    
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(85, 85, 85))
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(182, 182, 182)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(63, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)                    
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleDescription("Passo a Passo");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Processando processando = new Processando();
        //Integer ano=Integer.parseInt(jComboBox1.getSelectedItem().toString());
        String disciplina=jComboBox2.getSelectedItem().toString(); 
        this.buscar(disciplina);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /*private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    */

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    //private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

 public void buscar(String disciplina) {
          
         // Implementa os tipos de arquivos que apareceram para escolha
         FileNameExtensionFilter fileNameExtensionFilter = new FileNameExtensionFilter(
         //descricao , extens�es permitidas
         "Planhilhas", "csv");
         //Inst�nciando o selecionador de arquivos
         JFileChooser fc = new JFileChooser();
         //Adicionando os arquivos que poderam ser selecionados
         fc.setFileFilter(fileNameExtensionFilter);
         //Nome da tela localizadora de arquvios
         fc.setDialogTitle("Escolhendo arquivo");
         //processando.setVisible(true);
       //Recebe uma resposta da janela quaso algum evento do localizador de arquivo seja acessado
          /**/
         
          int resposta = fc.showOpenDialog(null);
         
       //Verifica se resposta recebida � igual a ok
       if (resposta == JFileChooser.APPROVE_OPTION) {    	                          
                    //Se sim abre um buffer do arquivo e joga na tela
            new Thread(){
                    public void run(){                        
                        try {
                            //File file = new File();
                            FileInputStream fis= new FileInputStream(fc.getSelectedFile().getAbsolutePath());    
                            int cont=0;
                            	jLabel1.setText("Arquivo:"+fis.getFD());
                            	jLabel1.setText("Lendo estrutura do arquivo");
                            	jLabel1.setText("Lendo a aba da planilha");
                            	jLabel1.setText("Lendo as colunas da planilha");
                                jProgressBar1.setValue(0); 
                                jLabel1.setText("Iniciando processamento dos Microdados");
                                         			         			
		         			int i=0;
		         			int tamanho=0;		         			
		         			
		         			@SuppressWarnings("resource")
							BufferedReader reader = new BufferedReader(new InputStreamReader(fis));
                        	String linha = null;
                        	//String linhas = null;
                        	int contlinhas = 0;
                        	
                            while ((linha = reader.readLine()) != null) {
                            	i++;
                            	String[] dados = linha.split(";");
                            	
                            	tamanho=dados.length;
                            	                            	;
                            	jLabel1.setText(linha);
                            	
                            	jProgressBar1.setValue(i);
                            	
                                if( (jProgressBar1.getValue()>=97) ){
                                        i=i-1;
                                     jProgressBar1.setValue(i);
                                }
                                    
                               if(disciplina=="Língua Portuguesa" && !dados[0].isEmpty()) {    
                                //Objeto para banco
                            	MicrodadosLP microdados = new MicrodadosLP();
                            	microdados.setCD_PROJETO(Double.parseDouble(dados[0]));                            	
                            	microdados.setNM_PROJETO(dados[1]);		                            	
                            	microdados.setNU_ANO(Double.parseDouble(dados[2]));	                            		
                            	microdados.setCD_ESTADO(Double.parseDouble(dados[3]));	                            		
                            	microdados.setNM_ESTADO(dados[4]);	                            	
                            	microdados.setCD_REGIONAL(dados[5]);	                            	
                            	microdados.setNM_REGIONAL(dados[6]);
                            	microdados.setCD_MUNICIPIO(Double.parseDouble(dados[7].isEmpty()?"0":dados[7]));
                            	microdados.setNM_MUNICIPIO(dados[8]);
                            	microdados.setCD_ESCOLA(Double.parseDouble(dados[9].isEmpty()?"0":dados[7]));
                            	microdados.setNM_ESCOLA(dados[10]);
                            	microdados.setCD_REDE(Double.parseDouble(dados[11].isEmpty()?"0":dados[11]));
                            	microdados.setDC_REDE(dados[12]);
                            	microdados.setCD_LOCALIZACAO(Double.parseDouble(dados[13].isEmpty()?"0":dados[13]));
                            	microdados.setDC_LOCALIZACAO(dados[14]);
                            	microdados.setCD_TURMA(Double.parseDouble(dados[15].isEmpty()?"0":dados[15]));
                            	microdados.setCD_TURMA_INSTITUICAO(Double.parseDouble(dados[16].isEmpty()?"0":dados[16]));
                            	microdados.setNM_TURMA(dados[17]);
                            	microdados.setCD_TURNO(Double.parseDouble(dados[18].isEmpty()?"0":dados[18]));
                            	microdados.setDC_TURNO(dados[19]);
                            	microdados.setFL_MULTI_TURMA(Double.parseDouble(dados[20].isEmpty()?"0":dados[20]));
                            	microdados.setFL_ANEXO_TURMA(Double.parseDouble(dados[21].isEmpty()?"0":dados[21]));
                            	microdados.setCD_ENSINO(Double.parseDouble(dados[22].isEmpty()?"0":dados[22]));
                            	microdados.setDC_ENSINO(dados[23]);
                            	microdados.setCD_ALUNO(Double.parseDouble(dados[24].isEmpty()?"0":dados[24]));
                            	microdados.setCD_ALUNO_INSTITUCIONAL(Double.parseDouble(dados[25].isEmpty()?"0":dados[25]));
                            	microdados.setCD_ALUNO_INEP(Double.parseDouble(dados[26].isEmpty()?"0":dados[26]));
                            	microdados.setCD_ALUNO_PUBLICACAO(Double.parseDouble(dados[27].isEmpty()?"0":dados[27]));
                            	
                            	microdados.setNM_ALUNO(dados[28]);
                            	microdados.setDT_NASCIMENTO(dados[29]);
                            	microdados.setCD_SEXO(dados[30]);
                            	microdados.setFILIACAO(dados[31]);
                            	microdados.setDC_DEFICIENCIA(dados[32]);
                            	microdados.setNM_DISCIPLINA_CADERNO(dados[33]);
                            	microdados.setCD_DISCIPLIN(Double.parseDouble(dados[34].isEmpty()?"0":dados[34]));
                            	microdados.setNM_DISCIPLINA(dados[35]);
                            	microdados.setNM_DISCIPLINA_SIGLA(dados[36]);
                            	microdados.setCD_ETAPA_APLICACAO(Double.parseDouble(dados[37].isEmpty()?"0":dados[37]));
                            	microdados.setDC_ETAPA_APLICACAO(dados[38]);
                            	microdados.setCD_ETAPA_AVALIADA(Double.parseDouble(dados[39].isEmpty()?"0":dados[39]));
                            	microdados.setDC_ETAPA_AVALIADA(dados[40]);
                            	microdados.setCD_ETAPA(Double.parseDouble(dados[41].isEmpty()?"0":dados[41]));
                            	microdados.setCD_ETAPA_PUBLICACAO(Double.parseDouble(dados[42].isEmpty()?"0":dados[42]));
                            	microdados.setDC_ETAPA_PUBLICACAO(dados[43]);
                            	microdados.setCD_CADERNO(Double.parseDouble(dados[44].isEmpty()?"0":dados[44]));
                            	microdados.setDC_CADERNO(dados[45]);
                            	microdados.setNU_CADERNO(Double.parseDouble(dados[46].isEmpty()?"0":dados[46]));
                            	microdados.setCD_BASE_VERSAO(Double.parseDouble(dados[47].isEmpty()?"0":dados[47]));
                            	microdados.setNU_SEQUENCIAL(Double.parseDouble(dados[48].isEmpty()?"0":dados[48]));
                            	microdados.setFL_FILTROS(Double.parseDouble(dados[49].isEmpty()?"0":dados[49]));
                            	microdados.setDC_FILTROS(dados[50]);
                            	microdados.setFL_PLAN_EXTRA(Double.parseDouble(dados[51].isEmpty()?"0":dados[51]));
                            	microdados.setFL_EXTRA(Double.parseDouble(dados[52].isEmpty()?"0":dados[52]));
                            	microdados.setFL_ALN_EXTRA(Double.parseDouble(dados[53].isEmpty()?"0":dados[53]));
                            	microdados.setFL_PUBLICACAO(Double.parseDouble(dados[54].isEmpty()?"0":dados[54]));
                            	microdados.setDC_PUBLICACAO(dados[55]);
                            	microdados.setFL_EXCLUIDO_PLANEJADA(dados[56]);
                            	microdados.setFL_EXCLUIDO_SUJEITO(dados[57]);
                            	microdados.setFL_AVALIADO(Double.parseDouble(dados[58].isEmpty()?"0":dados[58]));
                            	microdados.setFL_PREENCHIDO(Double.parseDouble(dados[59].isEmpty()?"0":dados[59]));
                            	microdados.setVL_PROFICIENCIA(dados[60]);
                            	microdados.setVL_PROFICIENCIA_ERRO(Double.parseDouble(dados[61].isEmpty()?"0":dados[61].replace(",", ".") ));
                            	microdados.setNU_PONTOS(Double.parseDouble(dados[62].isEmpty()?"0":dados[62].replace(",", ".")));
                            	microdados.setVL_PERC_ACERTOS(Double.parseDouble(dados[63].isEmpty()?"0":dados[63].replace(",", ".")));
                            	microdados.setID_MASCARA(Double.parseDouble(dados[64].isEmpty()?"0":dados[64].replace(",", ".")));
                            	microdados.setCD_LOTE(Double.parseDouble(dados[65].isEmpty()?"0":dados[65].replace(",", ".")));
                            	microdados.setNU_PACOTE(Double.parseDouble(dados[66].isEmpty()?"0":dados[66].replace(",", ".")));
                            	microdados.setDC_IMAGEM_CARTAO(dados[67]);
                            	microdados.setDC_IMAGEM_LISTA(dados[68]);
                            	microdados.setDC_IMAGEM_ATA(dados[69]);
                            	microdados.setDC_IMAGEM_RESERVA(dados[70]);
                            	microdados.setNU_IMAGEM(dados[71]);
                            	microdados.setID_INSTRUMENTO(dados[72]);
                            	microdados.setTP_INSTRUMENTO(dados[73]);
                            	microdados.setDC_DESENHO_INSTRUMENTO(dados[74]);
                            	microdados.setTP_PROCESSAMENTO(dados[75]);
                            	microdados.setRP(dados[76]);
                            	microdados.setRP_001(dados[78]);
                            	microdados.setRP_002(dados[79]);
                            	microdados.setRP_003(dados[80]);                            	
                            	microdados.setRP_004(dados[81]);                            	
                            	microdados.setRP_005(dados[82]);
                            	microdados.setRP_006(dados[83]);
                            	microdados.setRP_007(dados[84]);
                            	microdados.setRP_008(dados[85]);
                            	microdados.setRP_009(dados[86]);
                            	microdados.setRP_010(dados[86]);
                            	microdados.setRP_011(dados[87]);
                            	microdados.setRP_012(dados[88]);
                            	microdados.setRP_013(dados[89]);
                            	microdados.setRP_014(dados[90]);
                            	microdados.setRP_015(dados[91]);
                            	microdados.setRP_016(dados[92]);
                            	microdados.setRP_017(dados[93]);
                            	microdados.setRP_018(dados[94]);
                            	microdados.setRP_019(dados[95]);
                            	microdados.setRP_020(dados[96]);
                            	microdados.setRP_021(dados[97]);
                            	microdados.setRP_022(dados[98]);
                            	microdados.setRP_023(dados[99]);
                            	microdados.setRP_024(dados[100]);
                            	microdados.setRP_025(dados[101]);
                            	microdados.setRP_026(dados[102]);
                            	microdados.setRP_027(dados[103]);
                            	microdados.setRP_028(dados[104]);
                            	microdados.setRP_029(dados[105]);
                            	microdados.setRP_030(dados[106]);
                            	microdados.setRP_031(dados[107]);
                            	microdados.setRP_032(dados[108]);
                            	microdados.setRP_033(dados[109]);
                            	microdados.setRP_034(dados[110]);
                            	microdados.setRP_035(dados[111]);
                            	microdados.setRP_036(dados[112]);
                            	microdados.setRP_037(dados[113]);
                            	microdados.setRP_038(dados[114]);
                            	microdados.setRP_039(dados[115]);
                            	microdados.setRP_040(dados[116]);
                            	microdados.setRP_041(dados[117]);
                            	microdados.setRP_042(dados[118]);
                            	microdados.setRP_043(dados[119]);
                            	microdados.setRP_044(dados[120]);
                            	microdados.setRP_045(dados[121]);
                            	microdados.setRP_046(dados[122]);
                            	microdados.setRP_047(dados[123]);
                            	microdados.setRP_048(dados[124]);
                            	microdados.setRP_049(dados[125]);
                            	microdados.setRP_050(dados[126]);
                            	microdados.setRP_051(dados[127]);
                            	microdados.setRP_052(dados[128]);
                            	microdados.setRP_053(dados[129]);
                            	microdados.setRP_054(dados[130]);
                            	microdados.setRP_055(dados[131]);
                            	microdados.setRP_056(dados[132]);
                            	microdados.setRP_057(dados[133]);
                            	microdados.setRP_059(dados[134]);
                            	microdados.setRP_058(dados[135]);
                            	
                            	microdados.setRPA_001(Double.parseDouble(dados[136].isEmpty()?"0":dados[136].replace(",", ".")));
                            	microdados.setRPA_002(Double.parseDouble(dados[137].isEmpty()?"0":dados[137].replace(",", ".")));
                            	microdados.setRPA_003(Double.parseDouble(dados[138].isEmpty()?"0":dados[138].replace(",", ".")));
                            	microdados.setRPA_004(Double.parseDouble(dados[139].isEmpty()?"0":dados[139].replace(",", ".")));
                            	microdados.setRPA_005(Double.parseDouble(dados[140].isEmpty()?"0":dados[140].replace(",", ".")));
                            	microdados.setRPA_006(Double.parseDouble(dados[141].isEmpty()?"0":dados[141].replace(",", ".")));
                            	microdados.setRPA_007(Double.parseDouble(dados[142].isEmpty()?"0":dados[142].replace(",", ".")));
                            	microdados.setRPA_008(Double.parseDouble(dados[143].isEmpty()?"0":dados[143].replace(",", ".")));
                            	microdados.setRPA_009(Double.parseDouble(dados[144].isEmpty()?"0":dados[144].replace(",", ".")));
                            	microdados.setRPA_010(Double.parseDouble(dados[145].isEmpty()?"0":dados[145].replace(",", ".")));
                            	microdados.setRPA_011(Double.parseDouble(dados[146].isEmpty()?"0":dados[146].replace(",", ".")));
                            	microdados.setRPA_012(Double.parseDouble(dados[147].isEmpty()?"0":dados[147].replace(",", ".")));
                            	microdados.setRPA_013(Double.parseDouble(dados[148].isEmpty()?"0":dados[148].replace(",", ".")));
                            	microdados.setRPA_014(Double.parseDouble(dados[149].isEmpty()?"0":dados[149].replace(",", ".")));
                            	microdados.setRPA_015(Double.parseDouble(dados[150].isEmpty()?"0":dados[150].replace(",", ".")));
                            	microdados.setRPA_016(Double.parseDouble(dados[151].isEmpty()?"0":dados[151].replace(",", ".")));
                            	microdados.setRPA_017(Double.parseDouble(dados[152].isEmpty()?"0":dados[152].replace(",", ".")));
                            	microdados.setRPA_018(Double.parseDouble(dados[153].isEmpty()?"0":dados[153].replace(",", ".")));
                            	microdados.setRPA_019(Double.parseDouble(dados[154].isEmpty()?"0":dados[154].replace(",", ".")));
                            	microdados.setRPA_020(Double.parseDouble(dados[155].isEmpty()?"0":dados[155].replace(",", ".")));
                            	microdados.setRPA_021(Double.parseDouble(dados[156].isEmpty()?"0":dados[156].replace(",", ".")));
                            	microdados.setRPA_022(Double.parseDouble(dados[157].isEmpty()?"0":dados[157].replace(",", ".")));
                            	microdados.setRPA_023(Double.parseDouble(dados[158].isEmpty()?"0":dados[158].replace(",", ".")));
                            	microdados.setRPA_024(Double.parseDouble(dados[159].isEmpty()?"0":dados[159].replace(",", ".")));
                            	microdados.setRPA_025(Double.parseDouble(dados[160].isEmpty()?"0":dados[160].replace(",", ".")));
                            	microdados.setRPA_026(Double.parseDouble(dados[161].isEmpty()?"0":dados[161].replace(",", ".")));
                            	microdados.setRPA_027(Double.parseDouble(dados[162].isEmpty()?"0":dados[162].replace(",", ".")));
                            	microdados.setRPA_028(Double.parseDouble(dados[163].isEmpty()?"0":dados[163].replace(",", ".")));
                            	microdados.setRPA_029(Double.parseDouble(dados[164].isEmpty()?"0":dados[164].replace(",", ".")));
                            	microdados.setRPA_030(Double.parseDouble(dados[165].isEmpty()?"0":dados[165].replace(",", ".")));
                            	microdados.setRPA_031(Double.parseDouble(dados[166].isEmpty()?"0":dados[166].replace(",", ".")));
                            	microdados.setRPA_032(Double.parseDouble(dados[167].isEmpty()?"0":dados[167].replace(",", ".")));
                            	microdados.setRPA_033(Double.parseDouble(dados[168].isEmpty()?"0":dados[168].replace(",", ".")));
                            	microdados.setRPA_034(Double.parseDouble(dados[169].isEmpty()?"0":dados[169].replace(",", ".")));
                            	microdados.setRPA_035(Double.parseDouble(dados[170].isEmpty()?"0":dados[170].replace(",", ".")));
                            	microdados.setRPA_036(Double.parseDouble(dados[171].isEmpty()?"0":dados[171].replace(",", ".")));
                            	microdados.setRPA_037(Double.parseDouble(dados[172].isEmpty()?"0":dados[172].replace(",", ".")));
                            	microdados.setRPA_038(Double.parseDouble(dados[173].isEmpty()?"0":dados[173].replace(",", ".")));
                            	microdados.setRPA_039(Double.parseDouble(dados[174].isEmpty()?"0":dados[174].replace(",", ".")));
                            	microdados.setRPA_040(Double.parseDouble(dados[175].isEmpty()?"0":dados[175].replace(",", ".")));
                            	microdados.setRPA_041(Double.parseDouble(dados[176].isEmpty()?"0":dados[176].replace(",", ".")));
                            	microdados.setRPA_042(Double.parseDouble(dados[177].isEmpty()?"0":dados[177].replace(",", ".")));
                            	microdados.setRPA_043(Double.parseDouble(dados[178].isEmpty()?"0":dados[178].replace(",", ".")));
                            	microdados.setRPA_044(Double.parseDouble(dados[179].isEmpty()?"0":dados[179].replace(",", ".")));
                            	microdados.setRPA_045(Double.parseDouble(dados[180].isEmpty()?"0":dados[180].replace(",", ".")));
                            	microdados.setRPA_046(Double.parseDouble(dados[181].isEmpty()?"0":dados[181].replace(",", ".")));
                            	microdados.setRPA_047(Double.parseDouble(dados[182].isEmpty()?"0":dados[182].replace(",", ".")));
                            	microdados.setRPA_048(Double.parseDouble(dados[183].isEmpty()?"0":dados[183].replace(",", ".")));
                            	microdados.setRPA_049(Double.parseDouble(dados[184].isEmpty()?"0":dados[184].replace(",", ".")));
                            	microdados.setRPA_050(Double.parseDouble(dados[185].isEmpty()?"0":dados[185].replace(",", ".")));
                            	microdados.setRPA_051(Double.parseDouble(dados[186].isEmpty()?"0":dados[186].replace(",", ".")));
                            	microdados.setRPA_052(Double.parseDouble(dados[187].isEmpty()?"0":dados[187].replace(",", ".")));
                            	microdados.setRPA_053(Double.parseDouble(dados[188].isEmpty()?"0":dados[188].replace(",", ".")));
                            	microdados.setRPA_054(Double.parseDouble(dados[189].isEmpty()?"0":dados[189].replace(",", ".")));
                            	microdados.setRPA_055(Double.parseDouble(dados[190].isEmpty()?"0":dados[190].replace(",", ".")));
                            	microdados.setRPA_056(Double.parseDouble(dados[191].isEmpty()?"0":dados[191].replace(",", ".")));
                            	microdados.setRPA_057(Double.parseDouble(dados[192].isEmpty()?"0":dados[192].replace(",", ".")));
                            	microdados.setRPA_058(Double.parseDouble(dados[193].isEmpty()?"0":dados[193].replace(",", ".")));
                            	microdados.setRPA_059(Double.parseDouble(dados[194].isEmpty()?"0":dados[194].replace(",", ".")));
                            	microdados.setRPA_060(Double.parseDouble(dados[195].isEmpty()?"0":dados[195].replace(",", ".")));
                            	microdados.setRPA_061(Double.parseDouble(dados[196].isEmpty()?"0":dados[196].replace(",", ".")));
                            	microdados.setRPA_062(Double.parseDouble(dados[197].isEmpty()?"0":dados[197].replace(",", ".")));
                            	microdados.setRPA_063(Double.parseDouble(dados[198].isEmpty()?"0":dados[198].replace(",", ".")));
                            	microdados.setRPA_064(Double.parseDouble(dados[199].isEmpty()?"0":dados[199].replace(",", ".")));
                            	microdados.setRPA_065(Double.parseDouble(dados[200].isEmpty()?"0":dados[200].replace(",", ".")));
                            	microdados.setRPA_066(Double.parseDouble(dados[201].isEmpty()?"0":dados[201].replace(",", ".")));
                            	microdados.setRPA_067(Double.parseDouble(dados[202].isEmpty()?"0":dados[202].replace(",", ".")));
                            	microdados.setRPA_068(Double.parseDouble(dados[203].isEmpty()?"0":dados[203].replace(",", ".")));
                            	microdados.setRPA_069(Double.parseDouble(dados[204].isEmpty()?"0":dados[204].replace(",", ".")));
                            	microdados.setRPA_070(Double.parseDouble(dados[205].isEmpty()?"0":dados[205].replace(",", ".")));
                            	microdados.setRPA_071(Double.parseDouble(dados[206].isEmpty()?"0":dados[206].replace(",", ".")));
                            	microdados.setRPA_072(Double.parseDouble(dados[207].isEmpty()?"0":dados[207].replace(",", ".")));
                            	microdados.setRPA_073(Double.parseDouble(dados[208].isEmpty()?"0":dados[208].replace(",", ".")));
                            	microdados.setRPA_074(Double.parseDouble(dados[209].isEmpty()?"0":dados[209].replace(",", ".")));
                            	microdados.setRPA_075(Double.parseDouble(dados[210].isEmpty()?"0":dados[210].replace(",", ".")));
                            	microdados.setRPA_076(Double.parseDouble(dados[211].isEmpty()?"0":dados[211].replace(",", ".")));
                            	microdados.setRPA_077(Double.parseDouble(dados[212].isEmpty()?"0":dados[212].replace(",", ".")));
                            	microdados.setRPA_078(Double.parseDouble(dados[213].isEmpty()?"0":dados[213].replace(",", ".")));
                            	microdados.setRPA_079(Double.parseDouble(dados[214].isEmpty()?"0":dados[214].replace(",", ".")));
                            	microdados.setRPA_080(Double.parseDouble(dados[215].isEmpty()?"0":dados[215].replace(",", ".")));
                            	microdados.setRPA_081(Double.parseDouble(dados[216].isEmpty()?"0":dados[216].replace(",", ".")));
                            	microdados.setRPA_082(Double.parseDouble(dados[217].isEmpty()?"0":dados[217].replace(",", ".")));
                            	microdados.setRPA_083(Double.parseDouble(dados[218].isEmpty()?"0":dados[218].replace(",", ".")));
                            	microdados.setRPA_084(Double.parseDouble(dados[219].isEmpty()?"0":dados[219].replace(",", ".")));
                            	microdados.setRPA_085(Double.parseDouble(dados[220].isEmpty()?"0":dados[220].replace(",", ".")));
                            	microdados.setRPA_086(Double.parseDouble(dados[221].isEmpty()?"0":dados[221].replace(",", ".")));
                            	microdados.setRPA_087(Double.parseDouble(dados[222].isEmpty()?"0":dados[222].replace(",", ".")));
                            	microdados.setRPA_088(Double.parseDouble(dados[223].isEmpty()?"0":dados[223].replace(",", ".")));
                            	microdados.setRPA_089(Double.parseDouble(dados[224].isEmpty()?"0":dados[224].replace(",", ".")));
                            	microdados.setRPA_090(Double.parseDouble(dados[225].isEmpty()?"0":dados[225].replace(",", ".")));
                            	microdados.setRPA_091(Double.parseDouble(dados[226].isEmpty()?"0":dados[226].replace(",", ".")));
                            	microdados.setNU_POSICAO_LISTA(dados[228]);
                            	microdados.setRP_LISTA(dados[229]);
                            	microdados.setDC_TURNO_ESCOLA(dados[230]);
                            	if(dados.length>=232)microdados.setTIPO(Double.parseDouble(dados[231].isEmpty()?"0":dados[231].replace(",", ".")));
                            	if(dados.length>=233)microdados.setFL_ESC_TECNICA(Double.parseDouble(dados[232].isEmpty()?"0":dados[232].replace(",", ".")));
                            	if(dados.length>=234)microdados.setFL_SEAMA(Double.parseDouble(dados[233].isEmpty()?"0":dados[233].replace(",", ".")));
                            	                            	
                            	if(dados.length>=235)microdados.setFL_SAEPE(Double.parseDouble(dados[234].isEmpty()?"0":dados[234].replace(",", ".")));
                            	if(dados.length>=236)microdados.setD001_ACERTO(Double.parseDouble(dados[235].isEmpty()?"0":dados[235].replace(",", ".")));
                            	if(dados.length>=237)microdados.setD001_TOTAL(Double.parseDouble(dados[236].isEmpty()?"0":dados[236].replace(",", ".")));
                            	if(dados.length>=238)microdados.setD002_ACERTO(Double.parseDouble(dados[237].isEmpty()?"0":dados[237].replace(",", ".")));
                            	if(dados.length>=239)microdados.setD002_TOTAL(Double.parseDouble(dados[238].isEmpty()?"0":dados[238].replace(",", ".")));
                            	if(dados.length>=240)microdados.setD003_ACERTO(Double.parseDouble(dados[239].isEmpty()?"0":dados[239].replace(",", ".")));
                            	if(dados.length>=241)microdados.setD003_TOTAL(Double.parseDouble(dados[240].isEmpty()?"0":dados[240].replace(",", ".")));
                            	if(dados.length>=242)microdados.setD004_ACERTO(Double.parseDouble(dados[241].isEmpty()?"0":dados[241].replace(",", ".")));
                            	if(dados.length>=243)microdados.setD004_TOTAL(Double.parseDouble(dados[242].isEmpty()?"0":dados[242].replace(",", ".")));
                            	if(dados.length>=244)microdados.setD005_ACERTO(Double.parseDouble(dados[243].isEmpty()?"0":dados[243].replace(",", ".")));
                            	if(dados.length>=245)microdados.setD005_TOTAL(Double.parseDouble(dados[244].isEmpty()?"0":dados[244].replace(",", ".")));
                            	if(dados.length>=246)microdados.setD007_ACERTO(Double.parseDouble(dados[245].isEmpty()?"0":dados[245].replace(",", ".")));
                            	if(dados.length>=247)microdados.setD007_TOTAL(Double.parseDouble(dados[246].isEmpty()?"0":dados[246].replace(",", ".")));
                            	if(dados.length>=248)microdados.setD008_ACERTO(Double.parseDouble(dados[247].isEmpty()?"0":dados[247].replace(",", ".")));
                            	if(dados.length>=249)microdados.setD008_TOTAL(Double.parseDouble(dados[248].isEmpty()?"0":dados[248].replace(",", ".")));
                            	if(dados.length>=250)microdados.setD009_ACERTO(Double.parseDouble(dados[249].isEmpty()?"0":dados[249].replace(",", ".")));
                            	if(dados.length>=251)microdados.setD009_TOTAL(Double.parseDouble(dados[250].isEmpty()?"0":dados[250].replace(",", ".")));
                            	if(dados.length>=252)microdados.setD010_ACERTO(Double.parseDouble(dados[251].isEmpty()?"0":dados[251].replace(",", ".")));
                            	if(dados.length>=253)microdados.setD010_TOTAL(Double.parseDouble(dados[252].isEmpty()?"0":dados[252].replace(",", ".")));
                            	if(dados.length>=254)microdados.setD011_ACERTO(Double.parseDouble(dados[253].isEmpty()?"0":dados[253].replace(",", ".")));
                            	if(dados.length>=255)microdados.setD011_TOTAL(Double.parseDouble(dados[254].isEmpty()?"0":dados[254].replace(",", ".")));
                            	if(dados.length>=256)microdados.setD012_ACERTO(Double.parseDouble(dados[255].isEmpty()?"0":dados[255].replace(",", ".")));
                            	if(dados.length>=257)microdados.setD012_TOTAL(Double.parseDouble(dados[256].isEmpty()?"0":dados[256].replace(",", ".")));
                            	if(dados.length>=258)microdados.setD013_ACERTO(Double.parseDouble(dados[257].isEmpty()?"0":dados[257].replace(",", ".")));
                            	if(dados.length>=259)microdados.setD013_TOTAL(Double.parseDouble(dados[258].isEmpty()?"0":dados[258].replace(",", ".")));
                            	if(dados.length>=260)microdados.setD014_ACERTO(Double.parseDouble(dados[259].isEmpty()?"0":dados[259].replace(",", ".")));
                            	if(dados.length>=261)microdados.setD014_TOTAL(Double.parseDouble(dados[260].isEmpty()?"0":dados[260].replace(",", ".")));
                            	if(dados.length>=262)microdados.setD015_ACERTO(Double.parseDouble(dados[261].isEmpty()?"0":dados[261].replace(",", ".")));
                            	if(dados.length>=263)microdados.setD015_TOTAL(Double.parseDouble(dados[262].isEmpty()?"0":dados[262].replace(",", ".")));
                            	if(dados.length>=264)microdados.setD016_ACERTO(Double.parseDouble(dados[263].isEmpty()?"0":dados[263].replace(",", ".")));                            	
                            	if(dados.length>=265)microdados.setD016_TOTAL(Double.parseDouble(dados[264].isEmpty()?"0":dados[264].replace(",", ".")));
                            	if(dados.length>=266)microdados.setD017_ACERTO(Double.parseDouble(dados[265].isEmpty()?"0":dados[265].replace(",", ".")));
                            	if(dados.length>=267)microdados.setD017_TOTAL(Double.parseDouble(dados[266].isEmpty()?"0":dados[266].replace(",", ".")));
                            	if(dados.length>=268)microdados.setD018_ACERTO(Double.parseDouble(dados[267].isEmpty()?"0":dados[267].replace(",", ".")));
                            	if(dados.length>=269)microdados.setD018_TOTAL(Double.parseDouble(dados[268].isEmpty()?"0":dados[268].replace(",", ".")));
                            	if(dados.length>=270)microdados.setD019_ACERTO(Double.parseDouble(dados[269].isEmpty()?"0":dados[269].replace(",", ".")));
                            	if(dados.length>=271)microdados.setD019_TOTAL(Double.parseDouble(dados[270].isEmpty()?"0":dados[270].replace(",", ".")));
                            	if(dados.length>=272)microdados.setD020_ACERTO(Double.parseDouble(dados[271].isEmpty()?"0":dados[271].replace(",", ".")));
                            	if(dados.length>=273)microdados.setD020_TOTAL(Double.parseDouble(dados[272].isEmpty()?"0":dados[272].replace(",", ".")));
                            	if(dados.length>=274)microdados.setD021_ACERTO(Double.parseDouble(dados[273].isEmpty()?"0":dados[273].replace(",", ".")));
                            	
                            	if(dados.length>=275)microdados.setD021_TOTAL(Double.parseDouble(dados[274].isEmpty()?"0":dados[274].replace(",", ".")));
                            	if(dados.length>=276)microdados.setD022_ACERTO(Double.parseDouble(dados[275].isEmpty()?"0":dados[275].replace(",", ".")));
                            	if(dados.length>=277)microdados.setD022_TOTAL(Double.parseDouble(dados[276].isEmpty()?"0":dados[276].replace(",", ".")));
                            	if(dados.length>=278)microdados.setD023_ACERTO(Double.parseDouble(dados[277].isEmpty()?"0":dados[277].replace(",", ".")));
                            	if(dados.length>=279)microdados.setD023_TOTAL(Double.parseDouble(dados[278].isEmpty()?"0":dados[278].replace(",", ".")));
                            	if(dados.length>=280)microdados.setD024_ACERTO(Double.parseDouble(dados[279].isEmpty()?"0":dados[279].replace(",", ".")));
                            	if(dados.length>=281)microdados.setD024_TOTAL(Double.parseDouble(dados[280].isEmpty()?"0":dados[280].replace(",", ".")));
                            	if(dados.length>=282)microdados.setD025_ACERTO(Double.parseDouble(dados[281].isEmpty()?"0":dados[281].replace(",", ".")));
                            	if(dados.length>=283)microdados.setD025_TOTAL(Double.parseDouble(dados[282].isEmpty()?"0":dados[282].replace(",", ".")));
                            	if(dados.length>=284)microdados.setD026_ACERTO(Double.parseDouble(dados[283].isEmpty()?"0":dados[283].replace(",", ".")));
                            	if(dados.length>=285)microdados.setD026_TOTAL(Double.parseDouble(dados[284].isEmpty()?"0":dados[284].replace(",", ".")));
                            	
                            	ConexaoPostgres conectaBanco = new ConexaoPostgres();
									conectaBanco.adicionaMicrodadosLP(microdados, tamanho);
                                                                                if(conectaBanco.url.equals(new String("jdbc:postgresql://localhost:5432/postgres")) ||
                                                                                        conectaBanco.url.equals(new String("jdbc:postgresql://localhost:5432/saevprod"))
                                                                                        ){
                                                                                    jLabel6.setText( new String("Desenvolvimento"));
                                                                                }else if(conectaBanco.url.equals(new String("jdbc:postgresql://saevtreina.postgresql.dbaas.com.br"))){
                                                                                    jLabel6.setText( new String("TREINAMENTO"));
                                                                                }else if(conectaBanco.url.equals(new String("jdbc:postgresql://saevprod.postgresql.dbaas.com.br"))){
                                                                                    jLabel6.setText( new String("PRODUÇÃO"));
                                                                                }                                                                                                         
                                    conectaBanco=null;
								}else if(!dados[0].isEmpty()){
									
									MicrodadosMT microdados = new MicrodadosMT();
	                            	microdados.setCD_PROJETO(Double.parseDouble(dados[0]));                            	
	                            	microdados.setNM_PROJETO(dados[1]);		                            	
	                            	microdados.setNU_ANO(Double.parseDouble(dados[2]));	                            		
	                            	microdados.setCD_ESTADO(Double.parseDouble(dados[3]));	                            		
	                            	microdados.setNM_ESTADO(dados[4]);	                            	
	                            	microdados.setCD_REGIONAL(dados[5]);	                            	
	                            	microdados.setNM_REGIONAL(dados[6]);
	                            	microdados.setCD_MUNICIPIO(Double.parseDouble(dados[7].isEmpty()?"0":dados[7]));
	                            	microdados.setNM_MUNICIPIO(dados[8]);
	                            	microdados.setCD_ESCOLA(Double.parseDouble(dados[9].isEmpty()?"0":dados[7]));
	                            	microdados.setNM_ESCOLA(dados[10]);
	                            	microdados.setCD_REDE(Double.parseDouble(dados[11].isEmpty()?"0":dados[11]));
	                            	microdados.setDC_REDE(dados[12]);
	                            	microdados.setCD_LOCALIZACAO(Double.parseDouble(dados[13].isEmpty()?"0":dados[13]));
	                            	microdados.setDC_LOCALIZACAO(dados[14]);
	                            	microdados.setCD_TURMA(Double.parseDouble(dados[15].isEmpty()?"0":dados[15]));
	                            	microdados.setCD_TURMA_INSTITUICAO(Double.parseDouble(dados[16].isEmpty()?"0":dados[16]));
	                            	microdados.setNM_TURMA(dados[17]);
	                            	microdados.setCD_TURNO(Double.parseDouble(dados[18].isEmpty()?"0":dados[18]));
	                            	microdados.setDC_TURNO(dados[19]);
	                            	microdados.setFL_MULTI_TURMA(Double.parseDouble(dados[20].isEmpty()?"0":dados[20]));
	                            	microdados.setFL_ANEXO_TURMA(Double.parseDouble(dados[21].isEmpty()?"0":dados[21]));
	                            	microdados.setCD_ENSINO(Double.parseDouble(dados[22].isEmpty()?"0":dados[22]));
	                            	microdados.setDC_ENSINO(dados[23]);
	                            	microdados.setCD_ALUNO(Double.parseDouble(dados[24].isEmpty()?"0":dados[24]));
	                            	microdados.setCD_ALUNO_INSTITUCIONAL(Double.parseDouble(dados[25].isEmpty()?"0":dados[25]));
	                            	microdados.setCD_ALUNO_INEP(Double.parseDouble(dados[26].isEmpty()?"0":dados[26]));
	                            	microdados.setCD_ALUNO_PUBLICACAO(Double.parseDouble(dados[27].isEmpty()?"0":dados[27]));
	                            	
	                            	microdados.setNM_ALUNO(dados[28]);
	                            	microdados.setDT_NASCIMENTO(dados[29]);
	                            	microdados.setCD_SEXO(dados[30]);
	                            	microdados.setFILIACAO(dados[31]);
	                            	microdados.setDC_DEFICIENCIA(dados[32]);
	                            	microdados.setNM_DISCIPLINA_CADERNO(dados[33]);
	                            	microdados.setCD_DISCIPLIN(Double.parseDouble(dados[34].isEmpty()?"0":dados[34]));
	                            	microdados.setNM_DISCIPLINA(dados[35]);
	                            	microdados.setNM_DISCIPLINA_SIGLA(dados[36]);
	                            	microdados.setCD_ETAPA_APLICACAO(Double.parseDouble(dados[37].isEmpty()?"0":dados[37]));
	                            	microdados.setDC_ETAPA_APLICACAO(dados[38]);
	                            	microdados.setCD_ETAPA_AVALIADA(Double.parseDouble(dados[39].isEmpty()?"0":dados[39]));
	                            	microdados.setDC_ETAPA_AVALIADA(dados[40]);
	                            	microdados.setCD_ETAPA(Double.parseDouble(dados[41].isEmpty()?"0":dados[41]));
	                            	microdados.setCD_ETAPA_PUBLICACAO(Double.parseDouble(dados[42].isEmpty()?"0":dados[42]));
	                            	microdados.setDC_ETAPA_PUBLICACAO(dados[43]);
	                            	microdados.setCD_CADERNO(Double.parseDouble(dados[44].isEmpty()?"0":dados[44]));
	                            	microdados.setDC_CADERNO(dados[45]);
	                            	microdados.setNU_CADERNO(Double.parseDouble(dados[46].isEmpty()?"0":dados[46]));
	                            	microdados.setCD_BASE_VERSAO(Double.parseDouble(dados[47].isEmpty()?"0":dados[47]));
	                            	microdados.setNU_SEQUENCIAL(Double.parseDouble(dados[48].isEmpty()?"0":dados[48]));
	                            	microdados.setFL_FILTROS(Double.parseDouble(dados[49].isEmpty()?"0":dados[49]));
	                            	microdados.setDC_FILTROS(dados[50]);
	                            	microdados.setFL_PLAN_EXTRA(Double.parseDouble(dados[51].isEmpty()?"0":dados[51]));
	                            	microdados.setFL_EXTRA(Double.parseDouble(dados[52].isEmpty()?"0":dados[52]));
	                            	microdados.setFL_ALN_EXTRA(Double.parseDouble(dados[53].isEmpty()?"0":dados[53]));
	                            	microdados.setFL_PUBLICACAO(Double.parseDouble(dados[54].isEmpty()?"0":dados[54]));
	                            	microdados.setDC_PUBLICACAO(dados[55]);
	                            	microdados.setFL_EXCLUIDO_PLANEJADA(dados[56]);
	                            	microdados.setFL_EXCLUIDO_SUJEITO(dados[57]);
	                            	microdados.setFL_AVALIADO(Double.parseDouble(dados[58].isEmpty()?"0":dados[58]));
	                            	microdados.setFL_PREENCHIDO(Double.parseDouble(dados[59].isEmpty()?"0":dados[59]));
	                            	microdados.setVL_PROFICIENCIA(dados[60]);
	                            	microdados.setVL_PROFICIENCIA_ERRO(Double.parseDouble(dados[61].isEmpty()?"0":dados[61].replace(",", ".") ));
	                            	microdados.setNU_PONTOS(Double.parseDouble(dados[62].isEmpty()?"0":dados[62].replace(",", ".")));
	                            	microdados.setVL_PERC_ACERTOS(Double.parseDouble(dados[63].isEmpty()?"0":dados[63].replace(",", ".")));
	                            	microdados.setID_MASCARA(Double.parseDouble(dados[64].isEmpty()?"0":dados[64].replace(",", ".")));
	                            	microdados.setCD_LOTE(Double.parseDouble(dados[65].isEmpty()?"0":dados[65].replace(",", ".")));
	                            	microdados.setNU_PACOTE(Double.parseDouble(dados[66].isEmpty()?"0":dados[66].replace(",", ".")));
	                            	microdados.setDC_IMAGEM_CARTAO(dados[67]);
	                            	microdados.setDC_IMAGEM_LISTA(dados[68]);
	                            	microdados.setDC_IMAGEM_ATA(dados[69]);
	                            	microdados.setDC_IMAGEM_RESERVA(dados[70]);
	                            	microdados.setNU_IMAGEM(dados[71]);
	                            	microdados.setID_INSTRUMENTO(dados[72]);
	                            	microdados.setTP_INSTRUMENTO(dados[73]);
	                            	microdados.setDC_DESENHO_INSTRUMENTO(dados[74]);
	                            	microdados.setTP_PROCESSAMENTO(dados[75]);
	                            	microdados.setRP(dados[76]);
	                            	microdados.setRP_001(dados[78]);
	                            	microdados.setRP_002(dados[79]);
	                            	microdados.setRP_003(dados[80]);                            	
	                            	microdados.setRP_004(dados[81]);                            	
	                            	microdados.setRP_005(dados[82]);
	                            	microdados.setRP_006(dados[83]);
	                            	microdados.setRP_007(dados[84]);
	                            	microdados.setRP_008(dados[85]);
	                            	microdados.setRP_009(dados[86]);
	                            	microdados.setRP_010(dados[86]);
	                            	microdados.setRP_011(dados[87]);
	                            	microdados.setRP_012(dados[88]);
	                            	microdados.setRP_013(dados[89]);
	                            	microdados.setRP_014(dados[90]);
	                            	microdados.setRP_015(dados[91]);
	                            	microdados.setRP_016(dados[92]);
	                            	microdados.setRP_017(dados[93]);
	                            	microdados.setRP_018(dados[94]);
	                            	microdados.setRP_019(dados[95]);
	                            	microdados.setRP_020(dados[96]);
	                            	microdados.setRP_021(dados[97]);
	                            	microdados.setRP_022(dados[98]);
	                            	microdados.setRP_023(dados[99]);
	                            	microdados.setRP_024(dados[100]);
	                            	microdados.setRP_025(dados[101]);
	                            	microdados.setRP_026(dados[102]);
	                            	microdados.setRP_027(dados[103]);
	                            	microdados.setRP_028(dados[104]);
	                            	microdados.setRP_029(dados[105]);
	                            	microdados.setRP_030(dados[106]);
	                            	microdados.setRP_031(dados[107]);
	                            	microdados.setRP_032(dados[108]);
	                            	microdados.setRP_033(dados[109]);
	                            	microdados.setRP_034(dados[110]);
	                            	microdados.setRP_035(dados[111]);
	                            	microdados.setRP_036(dados[112]);
	                            	microdados.setRP_037(dados[113]);
	                            	microdados.setRP_038(dados[114]);
	                            	microdados.setRP_039(dados[115]);
	                            	microdados.setRP_040(dados[116]);
	                            	microdados.setRP_041(dados[117]);
	                            	microdados.setRP_042(dados[118]);
	                            	microdados.setRP_043(dados[119]);
	                            	microdados.setRP_044(dados[120]);
	                            	microdados.setRP_045(dados[121]);
	                            	microdados.setRP_046(dados[122]);
	                            	microdados.setRP_047(dados[123]);
	                            	microdados.setRP_048(dados[124]);
	                            	microdados.setRP_049(dados[125]);
	                            	microdados.setRP_050(dados[126]);
	                            	microdados.setRP_051(dados[127]);
	                            	microdados.setRP_052(dados[128]);
	                            	microdados.setRP_053(dados[129]);
	                            	microdados.setRP_054(dados[130]);
	                            	microdados.setRP_055(dados[131]);
	                            	microdados.setRP_056(dados[132]);
	                            	microdados.setRP_057(dados[133]);
	                            	microdados.setRP_059(dados[134]);
	                            	microdados.setRP_058(dados[135]);
	                            	
	                            	microdados.setRPA_001(Double.parseDouble(dados[136].isEmpty()?"0":dados[136].replace(",", ".")));
	                            	microdados.setRPA_002(Double.parseDouble(dados[137].isEmpty()?"0":dados[137].replace(",", ".")));
	                            	microdados.setRPA_003(Double.parseDouble(dados[138].isEmpty()?"0":dados[138].replace(",", ".")));
	                            	microdados.setRPA_004(Double.parseDouble(dados[139].isEmpty()?"0":dados[139].replace(",", ".")));
	                            	microdados.setRPA_005(Double.parseDouble(dados[140].isEmpty()?"0":dados[140].replace(",", ".")));
	                            	microdados.setRPA_006(Double.parseDouble(dados[141].isEmpty()?"0":dados[141].replace(",", ".")));
	                            	microdados.setRPA_007(Double.parseDouble(dados[142].isEmpty()?"0":dados[142].replace(",", ".")));
	                            	microdados.setRPA_008(Double.parseDouble(dados[143].isEmpty()?"0":dados[143].replace(",", ".")));
	                            	microdados.setRPA_009(Double.parseDouble(dados[144].isEmpty()?"0":dados[144].replace(",", ".")));
	                            	microdados.setRPA_010(Double.parseDouble(dados[145].isEmpty()?"0":dados[145].replace(",", ".")));
	                            	microdados.setRPA_011(Double.parseDouble(dados[146].isEmpty()?"0":dados[146].replace(",", ".")));
	                            	microdados.setRPA_012(Double.parseDouble(dados[147].isEmpty()?"0":dados[147].replace(",", ".")));
	                            	microdados.setRPA_013(Double.parseDouble(dados[148].isEmpty()?"0":dados[148].replace(",", ".")));
	                            	microdados.setRPA_014(Double.parseDouble(dados[149].isEmpty()?"0":dados[149].replace(",", ".")));
	                            	microdados.setRPA_015(Double.parseDouble(dados[150].isEmpty()?"0":dados[150].replace(",", ".")));
	                            	microdados.setRPA_016(Double.parseDouble(dados[151].isEmpty()?"0":dados[151].replace(",", ".")));
	                            	microdados.setRPA_017(Double.parseDouble(dados[152].isEmpty()?"0":dados[152].replace(",", ".")));
	                            	microdados.setRPA_018(Double.parseDouble(dados[153].isEmpty()?"0":dados[153].replace(",", ".")));
	                            	microdados.setRPA_019(Double.parseDouble(dados[154].isEmpty()?"0":dados[154].replace(",", ".")));
	                            	microdados.setRPA_020(Double.parseDouble(dados[155].isEmpty()?"0":dados[155].replace(",", ".")));
	                            	microdados.setRPA_021(Double.parseDouble(dados[156].isEmpty()?"0":dados[156].replace(",", ".")));
	                            	microdados.setRPA_022(Double.parseDouble(dados[157].isEmpty()?"0":dados[157].replace(",", ".")));
	                            	microdados.setRPA_023(Double.parseDouble(dados[158].isEmpty()?"0":dados[158].replace(",", ".")));
	                            	microdados.setRPA_024(Double.parseDouble(dados[159].isEmpty()?"0":dados[159].replace(",", ".")));
	                            	microdados.setRPA_025(Double.parseDouble(dados[160].isEmpty()?"0":dados[160].replace(",", ".")));
	                            	microdados.setRPA_026(Double.parseDouble(dados[161].isEmpty()?"0":dados[161].replace(",", ".")));
	                            	microdados.setRPA_027(Double.parseDouble(dados[162].isEmpty()?"0":dados[162].replace(",", ".")));
	                            	microdados.setRPA_028(Double.parseDouble(dados[163].isEmpty()?"0":dados[163].replace(",", ".")));
	                            	microdados.setRPA_029(Double.parseDouble(dados[164].isEmpty()?"0":dados[164].replace(",", ".")));
	                            	microdados.setRPA_030(Double.parseDouble(dados[165].isEmpty()?"0":dados[165].replace(",", ".")));
	                            	microdados.setRPA_031(Double.parseDouble(dados[166].isEmpty()?"0":dados[166].replace(",", ".")));
	                            	microdados.setRPA_032(Double.parseDouble(dados[167].isEmpty()?"0":dados[167].replace(",", ".")));
	                            	microdados.setRPA_033(Double.parseDouble(dados[168].isEmpty()?"0":dados[168].replace(",", ".")));
	                            	microdados.setRPA_034(Double.parseDouble(dados[169].isEmpty()?"0":dados[169].replace(",", ".")));
	                            	microdados.setRPA_035(Double.parseDouble(dados[170].isEmpty()?"0":dados[170].replace(",", ".")));
	                            	microdados.setRPA_036(Double.parseDouble(dados[171].isEmpty()?"0":dados[171].replace(",", ".")));
	                            	microdados.setRPA_037(Double.parseDouble(dados[172].isEmpty()?"0":dados[172].replace(",", ".")));
	                            	microdados.setRPA_038(Double.parseDouble(dados[173].isEmpty()?"0":dados[173].replace(",", ".")));
	                            	microdados.setRPA_039(Double.parseDouble(dados[174].isEmpty()?"0":dados[174].replace(",", ".")));
	                            	microdados.setRPA_040(Double.parseDouble(dados[175].isEmpty()?"0":dados[175].replace(",", ".")));
	                            	microdados.setRPA_041(Double.parseDouble(dados[176].isEmpty()?"0":dados[176].replace(",", ".")));
	                            	microdados.setRPA_042(Double.parseDouble(dados[177].isEmpty()?"0":dados[177].replace(",", ".")));
	                            	microdados.setRPA_043(Double.parseDouble(dados[178].isEmpty()?"0":dados[178].replace(",", ".")));
	                            	microdados.setRPA_044(Double.parseDouble(dados[179].isEmpty()?"0":dados[179].replace(",", ".")));
	                            	microdados.setRPA_045(Double.parseDouble(dados[180].isEmpty()?"0":dados[180].replace(",", ".")));
	                            	microdados.setRPA_046(Double.parseDouble(dados[181].isEmpty()?"0":dados[181].replace(",", ".")));
	                            	microdados.setRPA_047(Double.parseDouble(dados[182].isEmpty()?"0":dados[182].replace(",", ".")));
	                            	microdados.setRPA_048(Double.parseDouble(dados[183].isEmpty()?"0":dados[183].replace(",", ".")));
	                            	microdados.setRPA_049(Double.parseDouble(dados[184].isEmpty()?"0":dados[184].replace(",", ".")));
	                            	microdados.setRPA_050(Double.parseDouble(dados[185].isEmpty()?"0":dados[185].replace(",", ".")));
	                            	microdados.setRPA_051(Double.parseDouble(dados[186].isEmpty()?"0":dados[186].replace(",", ".")));
	                            	microdados.setRPA_052(Double.parseDouble(dados[187].isEmpty()?"0":dados[187].replace(",", ".")));
	                            	microdados.setRPA_053(Double.parseDouble(dados[188].isEmpty()?"0":dados[188].replace(",", ".")));
	                            	microdados.setRPA_054(Double.parseDouble(dados[189].isEmpty()?"0":dados[189].replace(",", ".")));
	                            	microdados.setRPA_055(Double.parseDouble(dados[190].isEmpty()?"0":dados[190].replace(",", ".")));
	                            	microdados.setRPA_056(Double.parseDouble(dados[191].isEmpty()?"0":dados[191].replace(",", ".")));
	                            	microdados.setRPA_057(Double.parseDouble(dados[192].isEmpty()?"0":dados[192].replace(",", ".")));
	                            	microdados.setRPA_058(Double.parseDouble(dados[193].isEmpty()?"0":dados[193].replace(",", ".")));
	                            	microdados.setRPA_059(Double.parseDouble(dados[194].isEmpty()?"0":dados[194].replace(",", ".")));
	                            	microdados.setRPA_060(Double.parseDouble(dados[195].isEmpty()?"0":dados[195].replace(",", ".")));
	                            	microdados.setRPA_061(Double.parseDouble(dados[196].isEmpty()?"0":dados[196].replace(",", ".")));
	                            	microdados.setRPA_062(Double.parseDouble(dados[197].isEmpty()?"0":dados[197].replace(",", ".")));
	                            	microdados.setRPA_063(Double.parseDouble(dados[198].isEmpty()?"0":dados[198].replace(",", ".")));
	                            	microdados.setRPA_064(Double.parseDouble(dados[199].isEmpty()?"0":dados[199].replace(",", ".")));
	                            	microdados.setRPA_065(Double.parseDouble(dados[200].isEmpty()?"0":dados[200].replace(",", ".")));
	                            	microdados.setRPA_066(Double.parseDouble(dados[201].isEmpty()?"0":dados[201].replace(",", ".")));
	                            	microdados.setRPA_067(Double.parseDouble(dados[202].isEmpty()?"0":dados[202].replace(",", ".")));
	                            	microdados.setRPA_068(Double.parseDouble(dados[203].isEmpty()?"0":dados[203].replace(",", ".")));
	                            	microdados.setRPA_069(Double.parseDouble(dados[204].isEmpty()?"0":dados[204].replace(",", ".")));
	                            	microdados.setRPA_070(Double.parseDouble(dados[205].isEmpty()?"0":dados[205].replace(",", ".")));
	                            	microdados.setRPA_071(Double.parseDouble(dados[206].isEmpty()?"0":dados[206].replace(",", ".")));
	                            	microdados.setRPA_072(Double.parseDouble(dados[207].isEmpty()?"0":dados[207].replace(",", ".")));
	                            	microdados.setRPA_073(Double.parseDouble(dados[208].isEmpty()?"0":dados[208].replace(",", ".")));
	                            	microdados.setRPA_074(Double.parseDouble(dados[209].isEmpty()?"0":dados[209].replace(",", ".")));
	                            	microdados.setRPA_075(Double.parseDouble(dados[210].isEmpty()?"0":dados[210].replace(",", ".")));
	                            	microdados.setRPA_076(Double.parseDouble(dados[211].isEmpty()?"0":dados[211].replace(",", ".")));
	                            	microdados.setRPA_077(Double.parseDouble(dados[212].isEmpty()?"0":dados[212].replace(",", ".")));
	                            	microdados.setRPA_078(Double.parseDouble(dados[213].isEmpty()?"0":dados[213].replace(",", ".")));
	                            	microdados.setRPA_079(Double.parseDouble(dados[214].isEmpty()?"0":dados[214].replace(",", ".")));
	                            	microdados.setRPA_080(Double.parseDouble(dados[215].isEmpty()?"0":dados[215].replace(",", ".")));
	                            	microdados.setRPA_081(Double.parseDouble(dados[216].isEmpty()?"0":dados[216].replace(",", ".")));
	                            	microdados.setRPA_082(Double.parseDouble(dados[217].isEmpty()?"0":dados[217].replace(",", ".")));
	                            	microdados.setRPA_083(Double.parseDouble(dados[218].isEmpty()?"0":dados[218].replace(",", ".")));
	                            	microdados.setRPA_084(Double.parseDouble(dados[219].isEmpty()?"0":dados[219].replace(",", ".")));
	                            	microdados.setRPA_085(Double.parseDouble(dados[220].isEmpty()?"0":dados[220].replace(",", ".")));
	                            	microdados.setRPA_086(Double.parseDouble(dados[221].isEmpty()?"0":dados[221].replace(",", ".")));
	                            	microdados.setRPA_087(Double.parseDouble(dados[222].isEmpty()?"0":dados[222].replace(",", ".")));
	                            	microdados.setRPA_088(Double.parseDouble(dados[223].isEmpty()?"0":dados[223].replace(",", ".")));
	                            	microdados.setRPA_089(Double.parseDouble(dados[224].isEmpty()?"0":dados[224].replace(",", ".")));
	                            	microdados.setRPA_090(Double.parseDouble(dados[225].isEmpty()?"0":dados[225].replace(",", ".")));
	                            	microdados.setRPA_091(Double.parseDouble(dados[226].isEmpty()?"0":dados[226].replace(",", ".")));
	                            	microdados.setNU_POSICAO_LISTA(dados[228]);
	                            	microdados.setRP_LISTA(dados[229]);
	                            	microdados.setDC_TURNO_ESCOLA(dados[230]);
	                            	microdados.setTIPO(Double.parseDouble(dados[231].isEmpty()?"0":dados[231].replace(",", ".")));
	                            	microdados.setFL_ESC_TECNICA(Double.parseDouble(dados[232].isEmpty()?"0":dados[232].replace(",", ".")));
	                            	if(dados.length>=234)microdados.setFL_SEAMA(Double.parseDouble(dados[233].isEmpty()?"0":dados[233].replace(",", ".")));
	                            	                            	
	                            	if(dados.length>=235)microdados.setFL_SAEPE(Double.parseDouble(dados[234].isEmpty()?"0":dados[234].replace(",", ".")));
	                            	if(dados.length>=236)microdados.setD001_ACERTO(Double.parseDouble(dados[235].isEmpty()?"0":dados[235].replace(",", ".")));
	                            	if(dados.length>=237)microdados.setD001_TOTAL(Double.parseDouble(dados[236].isEmpty()?"0":dados[236].replace(",", ".")));
	                            	if(dados.length>=238)microdados.setD002_ACERTO(Double.parseDouble(dados[237].isEmpty()?"0":dados[237].replace(",", ".")));
	                            	if(dados.length>=239)microdados.setD002_TOTAL(Double.parseDouble(dados[238].isEmpty()?"0":dados[238].replace(",", ".")));
	                            	if(dados.length>=240)microdados.setD003_ACERTO(Double.parseDouble(dados[239].isEmpty()?"0":dados[239].replace(",", ".")));
	                            	if(dados.length>=241)microdados.setD003_TOTAL(Double.parseDouble(dados[240].isEmpty()?"0":dados[240].replace(",", ".")));
	                            	if(dados.length>=242)microdados.setD004_ACERTO(Double.parseDouble(dados[241].isEmpty()?"0":dados[241].replace(",", ".")));
	                            	if(dados.length>=243)microdados.setD004_TOTAL(Double.parseDouble(dados[242].isEmpty()?"0":dados[242].replace(",", ".")));
	                            	if(dados.length>=244)microdados.setD005_ACERTO(Double.parseDouble(dados[243].isEmpty()?"0":dados[243].replace(",", ".")));
	                            	if(dados.length>=245)microdados.setD005_TOTAL(Double.parseDouble(dados[244].isEmpty()?"0":dados[244].replace(",", ".")));
	                            	if(dados.length>=246)microdados.setD007_ACERTO(Double.parseDouble(dados[245].isEmpty()?"0":dados[245].replace(",", ".")));
	                            	if(dados.length>=247)microdados.setD007_TOTAL(Double.parseDouble(dados[246].isEmpty()?"0":dados[246].replace(",", ".")));
	                            	if(dados.length>=248)microdados.setD008_ACERTO(Double.parseDouble(dados[247].isEmpty()?"0":dados[247].replace(",", ".")));
	                            	if(dados.length>=249)microdados.setD008_TOTAL(Double.parseDouble(dados[248].isEmpty()?"0":dados[248].replace(",", ".")));
	                            	if(dados.length>=250)microdados.setD009_ACERTO(Double.parseDouble(dados[249].isEmpty()?"0":dados[249].replace(",", ".")));
	                            	if(dados.length>=251)microdados.setD009_TOTAL(Double.parseDouble(dados[250].isEmpty()?"0":dados[250].replace(",", ".")));
	                            	if(dados.length>=252)microdados.setD010_ACERTO(Double.parseDouble(dados[251].isEmpty()?"0":dados[251].replace(",", ".")));
	                            	if(dados.length>=253)microdados.setD010_TOTAL(Double.parseDouble(dados[252].isEmpty()?"0":dados[252].replace(",", ".")));
	                            	if(dados.length>=254)microdados.setD011_ACERTO(Double.parseDouble(dados[253].isEmpty()?"0":dados[253].replace(",", ".")));
	                            	if(dados.length>=255)microdados.setD011_TOTAL(Double.parseDouble(dados[254].isEmpty()?"0":dados[254].replace(",", ".")));
	                            	if(dados.length>=256)microdados.setD012_ACERTO(Double.parseDouble(dados[255].isEmpty()?"0":dados[255].replace(",", ".")));
	                            	if(dados.length>=257)microdados.setD012_TOTAL(Double.parseDouble(dados[256].isEmpty()?"0":dados[256].replace(",", ".")));
	                            	if(dados.length>=258)microdados.setD013_ACERTO(Double.parseDouble(dados[257].isEmpty()?"0":dados[257].replace(",", ".")));
	                            	if(dados.length>=259)microdados.setD013_TOTAL(Double.parseDouble(dados[258].isEmpty()?"0":dados[258].replace(",", ".")));
	                            	if(dados.length>=260)microdados.setD014_ACERTO(Double.parseDouble(dados[259].isEmpty()?"0":dados[259].replace(",", ".")));
	                            	if(dados.length>=261)microdados.setD014_TOTAL(Double.parseDouble(dados[260].isEmpty()?"0":dados[260].replace(",", ".")));
	                            	if(dados.length>=262)microdados.setD015_ACERTO(Double.parseDouble(dados[261].isEmpty()?"0":dados[261].replace(",", ".")));
	                            	if(dados.length>=263)microdados.setD015_TOTAL(Double.parseDouble(dados[262].isEmpty()?"0":dados[262].replace(",", ".")));
	                            	if(dados.length>=264)microdados.setD016_ACERTO(Double.parseDouble(dados[263].isEmpty()?"0":dados[263].replace(",", ".")));                            	
	                            	if(dados.length>=265)microdados.setD016_TOTAL(Double.parseDouble(dados[264].isEmpty()?"0":dados[264].replace(",", ".")));
	                            	if(dados.length>=266)microdados.setD017_ACERTO(Double.parseDouble(dados[265].isEmpty()?"0":dados[265].replace(",", ".")));
	                            	if(dados.length>=267)microdados.setD017_TOTAL(Double.parseDouble(dados[266].isEmpty()?"0":dados[266].replace(",", ".")));
	                            	if(dados.length>=268)microdados.setD018_ACERTO(Double.parseDouble(dados[267].isEmpty()?"0":dados[267].replace(",", ".")));
	                            	if(dados.length>=269)microdados.setD018_TOTAL(Double.parseDouble(dados[268].isEmpty()?"0":dados[268].replace(",", ".")));
	                            	if(dados.length>=270)microdados.setD019_ACERTO(Double.parseDouble(dados[269].isEmpty()?"0":dados[269].replace(",", ".")));
	                            	if(dados.length>=271)microdados.setD019_TOTAL(Double.parseDouble(dados[270].isEmpty()?"0":dados[270].replace(",", ".")));
	                            	if(dados.length>=272)microdados.setD020_ACERTO(Double.parseDouble(dados[271].isEmpty()?"0":dados[271].replace(",", ".")));
	                            	if(dados.length>=273)microdados.setD020_TOTAL(Double.parseDouble(dados[272].isEmpty()?"0":dados[272].replace(",", ".")));
	                            	if(dados.length>=274)microdados.setD021_ACERTO(Double.parseDouble(dados[273].isEmpty()?"0":dados[273].replace(",", ".")));
	                            	
	                            	if(dados.length>=275)microdados.setD021_TOTAL(Double.parseDouble(dados[274].isEmpty()?"0":dados[274].replace(",", ".")));
	                            	if(dados.length>=276)microdados.setD022_ACERTO(Double.parseDouble(dados[275].isEmpty()?"0":dados[275].replace(",", ".")));
	                            	if(dados.length>=277)microdados.setD022_TOTAL(Double.parseDouble(dados[276].isEmpty()?"0":dados[276].replace(",", ".")));
	                            	if(dados.length>=278)microdados.setD023_ACERTO(Double.parseDouble(dados[277].isEmpty()?"0":dados[277].replace(",", ".")));
	                            	if(dados.length>=279)microdados.setD023_TOTAL(Double.parseDouble(dados[278].isEmpty()?"0":dados[278].replace(",", ".")));
	                            	if(dados.length>=280)microdados.setD024_ACERTO(Double.parseDouble(dados[279].isEmpty()?"0":dados[279].replace(",", ".")));
	                            	if(dados.length>=281)microdados.setD024_TOTAL(Double.parseDouble(dados[280].isEmpty()?"0":dados[280].replace(",", ".")));
	                            	if(dados.length>=282)microdados.setD025_ACERTO(Double.parseDouble(dados[281].isEmpty()?"0":dados[281].replace(",", ".")));
	                            	if(dados.length>=283)microdados.setD025_TOTAL(Double.parseDouble(dados[282].isEmpty()?"0":dados[282].replace(",", ".")));
	                            	if(dados.length>=284)microdados.setD026_ACERTO(Double.parseDouble(dados[283].isEmpty()?"0":dados[283].replace(",", ".")));
	                            	if(dados.length>=285)microdados.setD026_TOTAL(Double.parseDouble(dados[284].isEmpty()?"0":dados[284].replace(",", ".")));
	                            		
	                            		ConexaoPostgres conectaBanco = new ConexaoPostgres();
										conectaBanco.adicionaMicrodadosMP(microdados, tamanho);
	                                                                                if(conectaBanco.url.equals(new String("jdbc:postgresql://localhost:5432/postgres")) ||
	                                                                                        conectaBanco.url.equals(new String("jdbc:postgresql://localhost:5432/saevprod"))
	                                                                                        ){
	                                                                                    jLabel6.setText( new String("Desenvolvimento"));
	                                                                                }else if(conectaBanco.url.equals(new String("jdbc:postgresql://saevtreina.postgresql.dbaas.com.br"))){
	                                                                                    jLabel6.setText( new String("TREINAMENTO"));
	                                                                                }else if(conectaBanco.url.equals(new String("jdbc:postgresql://saevprod.postgresql.dbaas.com.br"))){
	                                                                                    jLabel6.setText( new String("PRODUÇÃO"));
	                                                                                }                                                                                                         
								
	                                    conectaBanco=null;                                          
								}                               
							}
                                jProgressBar1.setValue(100);
                                JOptionPane.showMessageDialog(null, "Importação Concluída!");
                                
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(CarregaArquivo.class.getName()).log(Level.SEVERE, null, ex);
                                JOptionPane.showMessageDialog(null,ex);
                            } catch (IOException ex) {
                            	Logger.getLogger(CarregaArquivo.class.getName()).log(Level.SEVERE, null, ex);
                            	JOptionPane.showMessageDialog(null,ex);
                        } catch (Exception e) {								
								e.printStackTrace();
								JOptionPane.showMessageDialog(null,e);
							}                           
                        }                    
                }.start();            
       	  }
	 }
}
